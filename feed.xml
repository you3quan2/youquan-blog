<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://you3quan2.github.io/youquan-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://you3quan2.github.io/youquan-blog/" rel="alternate" type="text/html" /><updated>2020-04-03T05:37:50-05:00</updated><id>https://you3quan2.github.io/youquan-blog/feed.xml</id><title type="html">Computing &amp;amp; Technology 101</title><subtitle>A place for you to learn about computing &amp; technology.</subtitle><entry><title type="html">Getting Started: ASP.NET Web Programming with C#</title><link href="https://you3quan2.github.io/youquan-blog/visual%20studio/asp.net/c%23/web/programming/2020/03/31/start-aspnet-c-web.html" rel="alternate" type="text/html" title="Getting Started: ASP.NET Web Programming with C#" /><published>2020-03-31T00:00:00-05:00</published><updated>2020-03-31T00:00:00-05:00</updated><id>https://you3quan2.github.io/youquan-blog/visual%20studio/asp.net/c%23/web/programming/2020/03/31/start-aspnet-c-web</id><content type="html" xml:base="https://you3quan2.github.io/youquan-blog/visual%20studio/asp.net/c%23/web/programming/2020/03/31/start-aspnet-c-web.html">&lt;h2 id=&quot;learning-outcomes&quot;&gt;Learning Outcomes&lt;/h2&gt;
&lt;p&gt;In this tutorial, we will:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Familiarise with the components in Visual Studio, including &lt;strong&gt;Solution Explorer&lt;/strong&gt;, &lt;strong&gt;Toolbox&lt;/strong&gt;, &lt;strong&gt;Properties&lt;/strong&gt; and &lt;strong&gt;Project View&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Learn how to to setup a one-page ASP.NET web application with Visual Studio.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-we-need-to-learn-this&quot;&gt;Why we need to learn this?&lt;/h2&gt;
&lt;p&gt;I believe you are here because you want/have to learn &lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet&quot;&gt;ASP.NET Web Programming&lt;/a&gt;. To learn ASP.NET, we need to use its defacto IDE - &lt;a href=&quot;https://visualstudio.microsoft.com/&quot;&gt;Microsoft Visual Studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My experience tells me that it is always better to start by having a brief tour on the tool which we are going to use in developing a project. It is going to save a huge amount of time throughout the learning process later if we first learn to master the tools.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio (I am using the 2019 version). See &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/install/install-visual-studio?view=vs-2019&quot;&gt;here&lt;/a&gt; on how to download and install.&lt;/p&gt;

&lt;h2 id=&quot;create-the-project&quot;&gt;Create the Project&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open our Visual Studio IDE and click on:&lt;br /&gt;
  &lt;img src=&quot;/youquan-blog/images/blog2_createproject.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
  Alternatively, click on &lt;strong&gt;FILE&lt;/strong&gt; → &lt;strong&gt;New Project&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose the ASP.NET Web Application (.NET Framework). Make sure it is the C# template.&lt;br /&gt;
  &lt;img src=&quot;/youquan-blog/images/blog2_createprojectnetframework.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Configure the project by having a &lt;strong&gt;Project name&lt;/strong&gt; and &lt;strong&gt;Solution name&lt;/strong&gt;. Take note on the location where the project is going to be saved. The version of the framework which I am using is &lt;strong&gt;.NET Framework 4.7.2&lt;/strong&gt;.  Click &lt;strong&gt;Create&lt;/strong&gt;.&lt;br /&gt;
&lt;img src=&quot;/youquan-blog/images/blog2_configureproject.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new ASP.NET web application by choosing the &lt;strong&gt;Empty&lt;/strong&gt; template. Click &lt;strong&gt;Create&lt;/strong&gt; again.&lt;br /&gt;
&lt;img src=&quot;/youquan-blog/images/blog2_createwebapp.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The new project will be opened and the &lt;strong&gt;Solution Explorer&lt;/strong&gt; will display the details of this project (my project is &lt;strong&gt;ASPNetTutorial&lt;/strong&gt;). That is fine if you cannot find your &lt;strong&gt;Solution Explorer&lt;/strong&gt; now, I will give you a tour of Visual Studio in the next section.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;familiarise-with-visual-studio&quot;&gt;Familiarise with Visual Studio&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;There are four must-know components in Visual Studio: &lt;strong&gt;Solution Explorer&lt;/strong&gt;, &lt;strong&gt;Toolbox&lt;/strong&gt;, &lt;strong&gt;Properties&lt;/strong&gt; and &lt;strong&gt;Project View&lt;/strong&gt;. Usually, the &lt;strong&gt;Solution Explorer&lt;/strong&gt; will be readily available when we open a project. When we click on the project name in the &lt;strong&gt;Solution Explorer&lt;/strong&gt; (mine is &lt;strong&gt;ASPNetTutorial&lt;/strong&gt; which highlighted in blue), we will also see the &lt;strong&gt;Project Properties&lt;/strong&gt;:
&lt;img src=&quot;/youquan-blog/images/blog2_newproject.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
However, if you cannot see your &lt;strong&gt;Solution Explorer&lt;/strong&gt;, go to the top of the Visual Studio and click on &lt;strong&gt;View&lt;/strong&gt; → &lt;strong&gt;Solution Explorer&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To introduce the functionalities of other components, we need to first create an empty web form. Right click on the project’s name (mine is &lt;strong&gt;ASPNetTutorial&lt;/strong&gt;), then click &lt;strong&gt;Add&lt;/strong&gt; → &lt;strong&gt;Web Form&lt;/strong&gt;. Name the item as &lt;strong&gt;Login&lt;/strong&gt; because we are going to create a simple Login interface. Now, we are supposed to have a &lt;code class=&quot;highlighter-rouge&quot;&gt;Login.aspx&lt;/code&gt; file. This file contains basic HTML codes with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/code&gt;.&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;%@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C#&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AutoEventWireup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CodeBehind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Login.aspx.cs&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inherits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ASPNetTutorial.Login&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
    
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Below the &lt;code class=&quot;highlighter-rouge&quot;&gt;Login.aspx&lt;/code&gt; file, there is a component which I call it as &lt;strong&gt;Project View&lt;/strong&gt;. It allows us to view our project in three different views: &lt;strong&gt;Design&lt;/strong&gt;, &lt;strong&gt;Split&lt;/strong&gt; and &lt;strong&gt;Source&lt;/strong&gt;. Personally, I like &lt;strong&gt;Split&lt;/strong&gt; view which provides us with &lt;strong&gt;Source&lt;/strong&gt; and &lt;strong&gt;Design&lt;/strong&gt; in the same window.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another important component which we will use frequently is the &lt;strong&gt;Toolbox&lt;/strong&gt;. To add this component, go to the top of the Visual Studio and click on &lt;strong&gt;View&lt;/strong&gt; → &lt;strong&gt;Toolbox&lt;/strong&gt;. In the &lt;strong&gt;Toolbox&lt;/strong&gt;, there are various types of elements which we know as &lt;strong&gt;Controls&lt;/strong&gt; in ASP.NET. These controls help to speed up our development process. We will see how &lt;strong&gt;Toolbox&lt;/strong&gt; and &lt;strong&gt;Controls&lt;/strong&gt; work in the next section.&lt;br /&gt;
&lt;img src=&quot;/youquan-blog/images/blog2_toolbox.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;our-first-aspnet-web-page&quot;&gt;Our First ASP.NET Web Page&lt;/h2&gt;
&lt;p&gt;Now, we are going to familiarise with the components in Visual Studio by creating a simple Login interface. This Login interface will have an username textbox, an username textbox and a login button. The textboxes and the button will be placed in a 3 (rows) x 2 (columns) table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Stuff&lt;/td&gt;
      &lt;td&gt;More things&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Username:&lt;/td&gt;
      &lt;td&gt;Username’s Textbox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Password:&lt;/td&gt;
      &lt;td&gt;Password’s Textbox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Login button&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you have learnt HTML, then you must know the we can manually code the layout presented above using HTML syntax such as &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, with Visual Studio, this layout can be developed with very little manual coding or no manual coding at all.&lt;/p&gt;</content><author><name>You Quan</name></author><summary type="html">Learning Outcomes In this tutorial, we will: Familiarise with the components in Visual Studio, including Solution Explorer, Toolbox, Properties and Project View. Learn how to to setup a one-page ASP.NET web application with Visual Studio.</summary></entry><entry><title type="html">Setting Up Git and Gitlab on Linux Ubuntu</title><link href="https://you3quan2.github.io/youquan-blog/git/gitlab/ubuntu/clion/c/programming/2020/03/26/setup-git-gitlab-clion-c.html" rel="alternate" type="text/html" title="Setting Up Git and Gitlab on Linux Ubuntu" /><published>2020-03-26T00:00:00-05:00</published><updated>2020-03-26T00:00:00-05:00</updated><id>https://you3quan2.github.io/youquan-blog/git/gitlab/ubuntu/clion/c/programming/2020/03/26/setup-git-gitlab-clion-c</id><content type="html" xml:base="https://you3quan2.github.io/youquan-blog/git/gitlab/ubuntu/clion/c/programming/2020/03/26/setup-git-gitlab-clion-c.html">&lt;h2 id=&quot;learning-outcomes&quot;&gt;Learning Outcomes&lt;/h2&gt;
&lt;p&gt;In this tutorial, we will learn:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;How to setup Git in our Linux workstation.&lt;/li&gt;
  &lt;li&gt;How to push C codes from our workstation to our Gitlab’s repository using Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-we-need-to-learn-this&quot;&gt;Why we need to learn this?&lt;/h2&gt;
&lt;p&gt;Imagine you are part of a large team which works on a software project. How you are going to keep track of the changes you and your team members have made over time? This is when a version control system like &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; comes into handy. Git allows us to manage these ever-changing projects by storing the information about these projects in the data structure called a repository.&lt;/p&gt;

&lt;p&gt;In this tutorial, we are going to use Git along with &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;Gitlab&lt;/a&gt;, a web-based Git repository. Gitlab allows a team of software developers to manage a single software project from anywhere on the earth, as long as they have Internet access. However, bear in mind that it is still possible to manage a software project with Git without a web-based repository and Internet access. You can read more about this &lt;a href=&quot;https://medium.com/@udnisap/share-collaborate-code-with-git-without-github-or-internet-2a71991c0089&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Ubuntu (Mine is 18.04.4 LTS, check yours with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;cat /etc/os-release&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;CLion (An IDE for C++ and C by JetBrains)&lt;/li&gt;
  &lt;li&gt;Git. It can be installed using the following commands:
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-add-repository ppa:git-core/ppa
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;xclip for retrieving SSH keys. To install xclip, we can run:
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;xclip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Gitlab. Create an account &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once we have all these ready, then we are good to go!&lt;/p&gt;

&lt;h2 id=&quot;setting-up-git&quot;&gt;Setting up Git&lt;/h2&gt;
&lt;p&gt;First, check if we have Git installed by typing the following command in our terminal:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Git version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command tells us which Git version we have on our workstation. If you don’t receive a &lt;code class=&quot;highlighter-rouge&quot;&gt;Git version&lt;/code&gt; message, it means that you need to install Git (check on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Requirements&lt;/code&gt; section). Next, we need to configure our Git username and email address, since every Git commit will use this information to identify us as the author.&lt;/p&gt;

&lt;p&gt;Add our Git username and email by using the following commands:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;[your_username]&quot;&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;[your_email_address]@[yourdomain].com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;generating-a-ssh-key-pair-for-our-gitlab-account&quot;&gt;Generating a SSH key pair for our Gitlab account&lt;/h2&gt;
&lt;p&gt;Open a new terminal on Linux and generate a new ED25519 SSH key pair:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; ed25519 &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[your_email_address]@[yourdomain].com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ED25519 is the most recommended public-key algorithm available today! You can read more about it &lt;a href=&quot;https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will be asked to input a file path to save our SSH key pair and a passphrase to secure our new SSH key pair. Both of these can be ignored by pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTER&lt;/code&gt;. If we did this correctly, we will get multiple messages, telling us where our identification and public key have been saved. We will also get our key fingerprint and our key’s randomart image.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Your identification has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ~/.ssh/id_ed25519.
Your public key has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ~/.ssh/id_ed25519.pub.
The key fingerprint is:
SHA256:XXX &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;your_email_address]@[yourdomain].com
The key&lt;span class=&quot;s1&quot;&gt;'s randomart image is:
+--[ED25519 256]--+
|     .*=XXo      |
|     .oOO=o      |
|     .+o+o       |
|   .o..=o.       |
|  E o*.oS.       |
|   .+.+ .        |
|  . o=           |
|.+ o.o.          |
|* o++..          |
+----[SHA256]-----+
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-our-ssh-key-pair-into-the-gitlab-account&quot;&gt;Adding our SSH key pair into the Gitlab account&lt;/h2&gt;
&lt;p&gt;To retrieve our SSH key pair, we first need to save the key pair into a text file using xclip:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xclip &lt;span class=&quot;nt&quot;&gt;-sel&lt;/span&gt; clip &amp;lt; ~/.ssh/id_ed25519.pub &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/gitlabsshkeypair.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, add the SSH key pair into our Gitlab account by following these steps:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open the &lt;code class=&quot;highlighter-rouge&quot;&gt;gitlabsshkeypair.txt&lt;/code&gt; and copy our SSH key pair.&lt;/li&gt;
  &lt;li&gt;Open the Gitlab account in a browser, click the Gitlab avatar in the upper right corner and select &lt;code class=&quot;highlighter-rouge&quot;&gt;Settings&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Navigate to &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH Keys&lt;/code&gt; and paste the SSH key pair which we have copied to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Key&lt;/code&gt; field.&lt;/li&gt;
  &lt;li&gt;Fill in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Title&lt;/code&gt; text box. It can be anything we like. We can leave the &lt;code class=&quot;highlighter-rouge&quot;&gt;Expires at&lt;/code&gt; text box empty.&lt;/li&gt;
  &lt;li&gt;Click the &lt;code class=&quot;highlighter-rouge&quot;&gt;Add key&lt;/code&gt; button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;testing-that-everything-is-set-up-correctly&quot;&gt;Testing that everything is set up correctly&lt;/h2&gt;
&lt;p&gt;Let’s test if everything is set up correctly by typing the following line into our terminal:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh &lt;span class=&quot;nt&quot;&gt;-T&lt;/span&gt; git@gitlab.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since it is the first time we connect to Gitlab via SSH, we will be asked to verify the authenticity of the GitLab host we are connecting to. We are supposed to get a message as follow:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The authenticity of host &lt;span class=&quot;s1&quot;&gt;'gitlab.com (xxx.xxx.xxx.xxx)'&lt;/span&gt; can&lt;span class=&quot;s1&quot;&gt;'t be established.
ECDSA key fingerprint is SHA256:XXXX.
Are you sure you want to continue connecting (yes/no)? 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Type &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;. We will get a warning message followed by a welcome message:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: Permanently added &lt;span class=&quot;s1&quot;&gt;'gitlab.com (xxx.xxx.xxx.xxx)'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; to the list of known hosts.
Welcome to GitLab, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;your_Gitlab_username]!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;By now, we can push and pull codes between our workstation and Gitlab securely!&lt;/p&gt;

&lt;h2 id=&quot;push-our-project-from-our-workstation-to-gitlab&quot;&gt;Push our project from our workstation to Gitlab&lt;/h2&gt;
&lt;p&gt;We are going to push our codes from the our workstation to our Gitlab account. In order to do this, we first need to have:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;A project created in our workstation. In my case, I have a C Executable project created using CLion IDE and stored in the following directory: &lt;code class=&quot;highlighter-rouge&quot;&gt;~/CLionProjects/CProject&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;An empty project created in our Gitlab account, where we are going to push the project’s codes from our workstation into this empty project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can create a project in Gitlab account by following these steps:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Clik the &lt;code class=&quot;highlighter-rouge&quot;&gt;New Project&lt;/code&gt; button in the upper right corner of our Gitlab account.&lt;/li&gt;
  &lt;li&gt;Give a name to our project (I used CProject) and click on &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Project&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;We will be redirected to the project page. This project should be empty.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, go back to our workstation and go to the directory where we saved our project. First, we need to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; command for Git to begin tracking the directory:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/CLionProjects/CProject
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note that your directory can be different than mine.&lt;/p&gt;

&lt;p&gt;Finally, use the following commands to push our project:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin git@gitlab.com:[yourGitLabUsername]/[yourprojectname].git
git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Initial commit&quot;&lt;/span&gt;
git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In my case, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin git@gitlab.com:you3quan2/cproject.git&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go to our Gitlab account and we are supposed to see the same set of codes in our workstation’s project folders and the Gitlab’s project folders.&lt;/p&gt;

&lt;h2 id=&quot;update-changes-in-our-workstation-to-gitlab&quot;&gt;Update changes in our workstation to Gitlab&lt;/h2&gt;
&lt;p&gt;Now, we have the exact same project in our workstation and Gitlab. But, we still need to update the Gitlab’s project every time we made changes on the project in our workstation. I will show you an example how we can do this.&lt;/p&gt;

&lt;p&gt;In my C project, there is a &lt;code class=&quot;highlighter-rouge&quot;&gt;main.c&lt;/code&gt; file which contains the following codes:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, World!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I updated my &lt;code class=&quot;highlighter-rouge&quot;&gt;main.c&lt;/code&gt; file and changed the line from &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello, World!&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Goodbye, World!&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Goodbye, World!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; You can make changes in any files you like within your project.&lt;/p&gt;

&lt;p&gt;To update these changes to my Gitlab project, I used:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;COMMENT TO DESCRIBE THE INTENTION OF THE COMMIT&quot;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;My comment is &lt;code class=&quot;highlighter-rouge&quot;&gt;Change from Hello World to Goodbye World&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go to the Gitlab account and check on the specific file which we have modified. We are supposed to see the changes which we have made. If we click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;History&lt;/code&gt; button, we will see our commit changes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/youquan-blog/images/blog1_commitchanges.png&quot; alt=&quot;&quot; title=&quot;Commit changes in Gitlab&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;</content><author><name>You Quan</name></author><summary type="html">Learning Outcomes In this tutorial, we will learn: How to setup Git in our Linux workstation. How to push C codes from our workstation to our Gitlab’s repository using Git.</summary></entry></feed>